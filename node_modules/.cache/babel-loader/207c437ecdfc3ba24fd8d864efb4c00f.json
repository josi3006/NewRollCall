{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\John\\\\git\\\\Firebase-auth-chat-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\John\\\\git\\\\Firebase-auth-chat-app\\\\src\\\\components\\\\studentList.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"./modal\";\nimport Navbar from \"./Navbar\"; // import { auth } from \"../../firebase\";\n\nimport { db } from \"../services/firebase\";\nimport \"./studentList.css\"; // import \"materialize-css/dist/css/materialize.min.css\";\n\nvar StudentList = function StudentList(_ref) {\n  var students = _ref.students,\n      refreshStudentList = _ref.refreshStudentList;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalOpen = _useState2[0],\n      setModalOpen = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStudentId = _useState4[0],\n      setActiveStudentId = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeStudentName = _useState6[0],\n      setActiveStudentName = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedTeacherId = _useState8[0],\n      setSelectedTeacherId = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      teachers = _useState10[0],\n      setTeachers = _useState10[1];\n\n  useEffect(function () {\n    // fire\n    // \t.database()\n    db.ref(\"/teachers/\").once(\"value\").then(function (snapshot) {\n      console.log(\"teachers\", snapshot.val());\n      setTeachers(snapshot.val());\n    });\n  }, []);\n\n  var setActiveStudent = function setActiveStudent(student) {\n    setActiveStudentName(student.name);\n    setActiveStudentId(student.id);\n    setModalOpen(true);\n  };\n\n  var assignToTeacher = function assignToTeacher() {\n    var currentAssignedTeacherId = localStorage.getItem(\"UR_APP_teacher_id\");\n    var updates = {}; // 1.  Remove the selected student from the current teacher..\n\n    updates[\"/teachers/\".concat(currentAssignedTeacherId, \"/students/\").concat(activeStudentId)] = null; // 2. Assign that student to the selected teacher\n\n    var studentToTransfer = {\n      id: activeStudentId,\n      name: activeStudentName\n    };\n    updates[\"/teachers/\".concat(selectedTeacherId, \"/students/\").concat(activeStudentId)] = studentToTransfer; // 3. Save and refresh....\n    // fire\n    // \t.database()\n\n    db.ref().update(updates).then(function () {\n      setModalOpen(false);\n      refreshStudentList();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"classHeader\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }, \"Students\"), Object.keys(students).map(function (key) {\n    var student = students[key];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: student.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-item transparent z-depth-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"studentname\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, student.name, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return setActiveStudent(student);\n      },\n      className: \"secondary-content modal-trigger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons icon-creamyyy\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }\n    }, \"more\")))));\n  }), modalOpen && /*#__PURE__*/React.createElement(Modal, {\n    closeModal: function closeModal() {\n      return setModalOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }\n  }, activeStudentName), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, \"Assign to Teacher\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }, Object.keys(teachers).map(function (teacher) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return setSelectedTeacherId(teacher);\n      },\n      className: \"teacher-option \".concat(teacher === selectedTeacherId ? \"active\" : null),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }\n    }, teachers[teacher].name);\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: assignToTeacher,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 6\n    }\n  }, \"Assign to Teacher\")));\n};\n\nexport default StudentList;","map":{"version":3,"sources":["C:/Users/John/git/Firebase-auth-chat-app/src/components/studentList.js"],"names":["React","useState","useEffect","Modal","Navbar","db","StudentList","students","refreshStudentList","modalOpen","setModalOpen","activeStudentId","setActiveStudentId","activeStudentName","setActiveStudentName","selectedTeacherId","setSelectedTeacherId","teachers","setTeachers","ref","once","then","snapshot","console","log","val","setActiveStudent","student","name","id","assignToTeacher","currentAssignedTeacherId","localStorage","getItem","updates","studentToTransfer","update","Object","keys","map","key","teacher"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"./modal\";\r\nimport Navbar from \"./Navbar\"\r\n// import { auth } from \"../../firebase\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nimport \"./studentList.css\";\r\n// import \"materialize-css/dist/css/materialize.min.css\";\r\n\r\nconst StudentList = ({ students, refreshStudentList }) => {\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\tconst [activeStudentId, setActiveStudentId] = useState(null);\r\n\tconst [activeStudentName, setActiveStudentName] = useState(null);\r\n\tconst [selectedTeacherId, setSelectedTeacherId] = useState(null);\r\n\tconst [teachers, setTeachers] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\t// fire\r\n    // \t.database()\r\n    db\r\n\t\t\t.ref(`/teachers/`)\r\n\t\t\t.once(\"value\")\r\n\t\t\t.then((snapshot) => {\r\n\t\t\t\tconsole.log(\"teachers\", snapshot.val());\r\n\t\t\t\tsetTeachers(snapshot.val());\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst setActiveStudent = (student) => {\r\n\t\tsetActiveStudentName(student.name);\r\n\t\tsetActiveStudentId(student.id);\r\n\t\tsetModalOpen(true);\r\n\t};\r\n\r\n\tconst assignToTeacher = () => {\r\n\t\tconst currentAssignedTeacherId = localStorage.getItem(\"UR_APP_teacher_id\");\r\n\t\tconst updates = {};\r\n\r\n\t\t// 1.  Remove the selected student from the current teacher..\r\n\t\tupdates[\r\n\t\t\t`/teachers/${currentAssignedTeacherId}/students/${activeStudentId}`\r\n\t\t] = null;\r\n\r\n\t\t// 2. Assign that student to the selected teacher\r\n\r\n\t\tconst studentToTransfer = {\r\n\t\t\tid: activeStudentId,\r\n\t\t\tname: activeStudentName,\r\n\t\t};\r\n\r\n\t\tupdates[\r\n\t\t\t`/teachers/${selectedTeacherId}/students/${activeStudentId}`\r\n\t\t] = studentToTransfer;\r\n\r\n\t\t// 3. Save and refresh....\r\n\t\t// fire\r\n    // \t.database()\r\n    db\r\n\t\t\t.ref()\r\n\t\t\t.update(updates)\r\n\t\t\t.then(() => {\r\n\t\t\t\tsetModalOpen(false);\r\n\t\t\t\trefreshStudentList();\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n            <Navbar />\r\n\r\n\t\t\t<h1 className='classHeader'>Students</h1>\r\n\t\t\t{Object.keys(students).map((key) => {\r\n\t\t\t\tconst student = students[key];\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={student.id}>\r\n\t\t\t\t\t\t<div className='collection-item transparent z-depth-0'>\r\n\t\t\t\t\t\t\t<div className='studentname'>\r\n\t\t\t\t\t\t\t\t{student.name}\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tonClick={() => setActiveStudent(student)}\r\n\t\t\t\t\t\t\t\t\tclassName='secondary-content modal-trigger'>\r\n\t\t\t\t\t\t\t\t\t<i className='material-icons icon-creamyyy'>more</i>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{modalOpen && (\r\n\t\t\t\t<Modal closeModal={() => setModalOpen(false)}>\r\n\t\t\t\t\t<h4>{activeStudentName}</h4>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<h6>Assign to Teacher</h6>\r\n\r\n\t\t\t\t\t<div className='select-box'>\r\n\t\t\t\t\t\t{Object.keys(teachers).map((teacher) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tonClick={() => setSelectedTeacherId(teacher)}\r\n\t\t\t\t\t\t\t\tclassName={`teacher-option ${\r\n\t\t\t\t\t\t\t\t\tteacher === selectedTeacherId ? \"active\" : null\r\n\t\t\t\t\t\t\t\t}`}>\r\n\t\t\t\t\t\t\t\t{teachers[teacher].name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={assignToTeacher}>Assign to Teacher</button>\r\n\t\t\t\t</Modal>\r\n\t\t\t)}\r\n\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default StudentList;\r\n"]},"metadata":{},"sourceType":"module"}